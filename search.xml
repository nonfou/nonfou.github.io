<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS7安装Oracle19c</title>
      <link href="/2022/07/08/CentOS7%E5%AE%89%E8%A3%85Oracle19c/"/>
      <url>/2022/07/08/CentOS7%E5%AE%89%E8%A3%85Oracle19c/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h3 id="Oracle安装"><a href="#Oracle安装" class="headerlink" title="Oracle安装"></a>Oracle安装</h3><p>关闭selinux, 设置 SELINUX&#x3D;disabled</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/selinux/config</span><br></pre></td></tr></table></figure><p>关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><p>创建用户和组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">groupadd oinstall</span><br><span class="line"></span><br><span class="line">groupadd dba</span><br><span class="line"></span><br><span class="line">groupadd oper</span><br><span class="line"></span><br><span class="line">useradd -g oinstall -G dba,oper oracle</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>设置密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">passwd oracle</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上传安装包到 <code>/home/oracle/</code></p><p>创建安装文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /home/oracle/app</span><br><span class="line">mkdir -p /home/oracle/app/oracle/product/19.3/dbhome_1</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unzip /home/oracle/LINUX.X64_193000_db_home.zip -d /home/oracle/app/oracle/product/19.3/dbhome_1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>授权</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">chown -R oracle:oinstall /home/oracle/app</span><br><span class="line">chmod 755 -R /home/oracle/app</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">su - oracle</span><br><span class="line"></span><br><span class="line">vim /home/oracle/.bash_profile</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加入以下内容</span></span><br><span class="line"></span><br><span class="line">export ORACLE_BASE=/home/oracle/app/oracle</span><br><span class="line">export ORACLE_HOME=/home/oracle/app/oracle/product/19.3/dbhome_1</span><br><span class="line">export ORACLE_SID=orcl</span><br><span class="line">export ORACLE_TERM=xterm</span><br><span class="line">export PATH=$ORACLE_HOME/bin:/usr/sbin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib</span><br><span class="line">export NLS_LANG=AMERICAN_AMERICA.AL32UTF8</span><br><span class="line">export ORACLE_UNQNAME=$ORACLE_SID</span><br><span class="line">export PATH</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加入以上内容</span></span><br><span class="line"></span><br><span class="line">source /home/oracle/.bash_profile</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="VNC安装"><a href="#VNC安装" class="headerlink" title="VNC安装"></a>VNC安装</h3><p>查看组列表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum grouplist</span><br></pre></td></tr></table></figure><p>安装桌面环境</p><p>根据组列表返回的名称安装</p><ul><li>操作系统为中文<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall -y &quot;GNOME 桌面&quot;</span><br></pre></td></tr></table></figure></li><li>操作系统为英文<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall -y &quot;GNOME Desktop&quot;</span><br></pre></td></tr></table></figure></li></ul><p>安装VNC服务软件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install tigervnc-server -y</span><br></pre></td></tr></table></figure><p>验证是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep tigervnc-server</span><br></pre></td></tr></table></figure><p>创建VNC服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service</span><br></pre></td></tr></table></figure><p>修改启动用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/vncserver@\:1.service</span><br></pre></td></tr></table></figure><p>将 <code>&lt;USER&gt;</code> 更改为 <code>oracle</code></p><p>设置密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">su - oracle</span><br><span class="line"></span><br><span class="line">vncpasswd</span><br><span class="line"></span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vncserver@\:1.service</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>查看端口是否监听</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnpt|grep Xvnc</span><br></pre></td></tr></table></figure><h3 id="VNC连接或登录桌面环境"><a href="#VNC连接或登录桌面环境" class="headerlink" title="VNC连接或登录桌面环境"></a>VNC连接或登录桌面环境</h3><p><a href="https://www.realvnc.com/en/connect/download/viewer/">VNC下载地址</a></p><p>VNC访问 <code>$&#123;oracle服务器ip&#125;:1</code></p><p>密码为运行<code>vncpasswd</code>命令时设置的密码</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">su - oracle</span><br><span class="line"></span><br><span class="line">cd /home/oracle/app/oracle/product/19.3/dbhome_1</span><br><span class="line"></span><br><span class="line">./runInstaller</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>增加交换空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建文件 6G</span></span><br><span class="line">dd if=/dev/zero of=swapfree bs=1M count=6144</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将此文件作为交换空间</span></span><br><span class="line">mkswap swapfree</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启交换空间</span></span><br><span class="line"></span><br><span class="line">swapon swapfree</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">写入 `/etc/fstab` 交换空间开机启动</span></span><br><span class="line"></span><br><span class="line">vim /etc/fstab</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 加入以下内容</span></span></span><br><span class="line">/home/oracle/swapfree swap swap defaults 0 0</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 加入以上内容</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mock后端接口</title>
      <link href="/2022/07/07/Mock%E5%90%8E%E7%AB%AF%E6%8E%A5%E5%8F%A3/"/>
      <url>/2022/07/07/Mock%E5%90%8E%E7%AB%AF%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>后端对于接口数据的Mock</p><ul><li>依赖的子服务</li><li>Feign&#x2F;Dubbo等rpc请求</li><li>第三方接口,天眼查&#x2F;启信宝</li></ul><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><p>参考两个开源项目实现</p><ol><li><a href="https://github.com/a524631266/jmock">模拟mock.js生成数据</a>，简称 <code>项目1</code></li><li><a href="https://github.com/yinjihuan/fox-mock">基于Agent实现接口mock</a>，简称 <code>项目2</code></li></ol><p><code>项目1</code>可以对mock数据有很好的支持，<code>项目2</code>基于Agent，无侵入的完成接口的代理。由此对两个项目进行了整合。</p><img src="/2022/07/07/Mock%E5%90%8E%E7%AB%AF%E6%8E%A5%E5%8F%A3/Agent%E4%BB%A3%E7%90%86%E6%B5%81%E7%A8%8B.png" class="" title="Agent代理流程"><h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><ol><li>代理的方法<br>针对你想Mock的所有接口，找寻一个共有的前置方法。</li></ol><ul><li><p>Dubbo调用</p><p>  <code>org.apache.dubbo.rpc.filter.ConsumerContextFilter.invoke</code></p></li><li><p>Feign 调用</p><p>  <code>feign.SynchronousMethodHandler.invoke</code></p></li></ul><ol start="2"><li>匹配Mock规则</li></ol><p><code>项目2</code>中是通过以<code>类名称#方法名称</code>作为名称，以文件的形式去定义Mock的内容。</p><p>为了结合<code>项目1</code>去使用，我们在原有Mock内容的基础上增加了Mock类的路径</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;f_mock_data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;class_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.nonfou.example.dto.BasicInfoDTO&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>然后使用<code>项目1</code>mock出不同的数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">AnnotationMockContext</span>().mock(Class.forName(<span class="string">&quot;$&#123;类路径&#125;&quot;</span>));</span><br></pre></td></tr></table></figure><h3 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h3><ol><li>思路的打通</li></ol><p>理解使用Agent，明白<code>项目2</code>设计思路，如何结合<code>项目1</code>使用。</p><ol start="2"><li>找到代理方法</li></ol><p>针对我想Mock的接口，通过给所有要代理的接口添加了注解，然后使用Aop去增强，这样所有的接口都会经过Aop的代理方法。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mock </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>beanFactory#getBean(Class)顺序定义</title>
      <link href="/2022/01/06/beanFactory-getBean-Class-%E9%A1%BA%E5%BA%8F%E5%AE%9A%E4%B9%89/"/>
      <url>/2022/01/06/beanFactory-getBean-Class-%E9%A1%BA%E5%BA%8F%E5%AE%9A%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>Spring中获取ApplicationContext的一种方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApplicationContext</span> <span class="keyword">implements</span> <span class="title class_">ApplicationContextAware</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        SpringFactory.setApplicationContext(applicationContext);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringFactory</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="title function_">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.applicationContext = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> statitc &lt;T&gt; T <span class="title function_">getBean</span><span class="params">(Class&lt;T&gt; cla)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> applicationContext.getBean(cla);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>现有一接口定义如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.b.a.c;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DefaultUserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我想获取 UserService 的实现类时，通过 SpringFactory.getBean(UserService.class)<br>获取到 DefaultUserServiceImpl 对象, 输出 Tom</p><p>再添加一个实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.b.a.c;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AllUserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Tom-all&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我想获取 UserService 的实现类时,通过 SpringFactory.getBean(UserService.class).getUserName()<br>获取到 AllUserServiceImpl 对象, 输出 Tom-all</p><p>以上是通过idea等工具直接编译运行的方式</p><p>现再添加一个实现, 此类是通过jar包来引入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.a.b.a;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JarUserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Tom-jar&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>通过idea直接编译运行 SpringFactory.getBean(UserService.class).getUserName() ，输出 Tom-all;</li><li>通过打包成jar包的方式运行  java -jar xxx.jar的方式运行 SpringFactory.getBean(UserService.class).getUserName()，输出 Tom-jar;</li></ol><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>当一个接口注入了多个实现类时，applicationContext.getBean(Class<T> aClass)获取到的bean是哪个？应该是默认获取第一个实现类；如何定义，才能让某一个实现类总是优先被获取？</p><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>applicationContext.getBean(Class<T> aclass) 获取到的bean，与bean被扫描到的先后顺序有关系。</p><ol><li><p>当通过idea等工具直接运行程序时，当前的工作目录会优先比引用的jar包先扫描到，而排名靠前的文件夹&#x2F;类也是优先被扫描(com.b.a.c.AllUserServiceImpl 先比 com.b.a.c.DefaultUserServiceImpl)被扫描到，依次放到 {@link org.springframework.beans.factory.support.DefaultListableBeanFactory#beanDefinitionNames}</p></li><li><p>当通过jar包的方式运行时，会按照jar包先后顺序进行扫描注入bean放到{@link org.springframework.beans.factory.support.DefaultListableBeanFactory#beanDefinitionNames}</p></li></ol><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>不管是jar包运行，还是本地编译运行，通过 SpringFactory.getBean(UserService.class) ，我想获取到的实现类都应该是 DefaultUserServiceImpl 对象</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>可以通过 自定义实现 {@link BeanDefinitionRegistryPostProcessor} 进行处理</p><p>{@link BeanDefinitionRegistryPostProcessor} 是 BeanFactory的后置处理器，当所有bean 被处理完成后，会调用该接口的实现类对应的方法</p><p>我们需要在此实现类中改变 {@link org.springframework.beans.factory.support.DefaultListableBeanFactory#beanDefinitionNames} 中 bean的顺序</p><p>从而 改变 applicationContext.getBean(Class) 获取到的实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.collection.CollUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> com.sinitek.sirm.org.service.IOrgService;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.builder.EqualsBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.builder.HashCodeBuilder;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.config.BeanDefinition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.config.ConfigurableListableBeanFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.support.BeanDefinitionRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.lang.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对&#123;<span class="doctag">@link</span> org.springframework.beans.factory.support.DefaultListableBeanFactory#beanDefinitionNames&#125;</span></span><br><span class="line"><span class="comment"> * 进行排序</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 借助&#123;<span class="doctag">@link</span> Order&#125; 注解, 同一个基类中，value 值越小，位置越靠前。</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chong.xu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 2021-1122</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> v3.5.0.x</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BeanDefinitionRegistryOrder</span> <span class="keyword">implements</span> <span class="title class_">BeanDefinitionRegistryPostProcessor</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">log</span> <span class="operator">=</span> LoggerFactory.getLogger(BeanDefinitionRegistryOrder.class);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 定义要排序的bean的基类</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;Class&lt;?&gt;&gt; orderClassList = Collections.singletonList(</span><br><span class="line">      UserService.class);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postProcessBeanDefinitionRegistry</span><span class="params">(</span></span><br><span class="line"><span class="params">      <span class="meta">@NonNull</span> BeanDefinitionRegistry beanDefinitionRegistry)</span></span><br><span class="line">      <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;BeanDefinitionNameOrder&gt; beanList = extractBeanDefinitionOrder(beanDefinitionRegistry);</span><br><span class="line"></span><br><span class="line">    Map&lt;Class&lt;?&gt;, List&lt;BeanDefinitionNameOrder&gt;&gt; beanDefinitionMap = groupByClass(beanList);</span><br><span class="line"></span><br><span class="line">    beanDefinitionMap.forEach((key, definitionList) -&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (CollUtil.isNotEmpty(definitionList)) &#123;</span><br><span class="line">        Collections.sort(definitionList);</span><br><span class="line">        <span class="keyword">for</span> (BeanDefinitionNameOrder beanDefinitionNameOrder : definitionList) &#123;</span><br><span class="line">          <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> beanDefinitionNameOrder.getBeanDefinitionName();</span><br><span class="line">          <span class="type">BeanDefinition</span> <span class="variable">beanDefinition</span> <span class="operator">=</span> beanDefinitionNameOrder.getBeanDefinition();</span><br><span class="line">          beanDefinitionRegistry.removeBeanDefinition(name);</span><br><span class="line">          beanDefinitionRegistry.registerBeanDefinition(name, beanDefinition);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 根据class类型分组</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> beanDefinitionNameOrderList bean定义列表</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> [class, List]</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> Map&lt;Class&lt;?&gt;, List&lt;BeanDefinitionNameOrder&gt;&gt; groupByClass(</span><br><span class="line">      List&lt;BeanDefinitionNameOrder&gt; beanDefinitionNameOrderList) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (CollUtil.isEmpty(beanDefinitionNameOrderList) || CollUtil.isEmpty(orderClassList)) &#123;</span><br><span class="line">      <span class="keyword">return</span> Collections.emptyMap();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Map&lt;Class&lt;?&gt;, List&lt;BeanDefinitionNameOrder&gt;&gt; result = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (BeanDefinitionNameOrder beanDefinitionNameOrder : beanDefinitionNameOrderList) &#123;</span><br><span class="line">      put(result, beanDefinitionNameOrder.getClassType(), beanDefinitionNameOrder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(Map&lt;Class&lt;?&gt;, List&lt;BeanDefinitionNameOrder&gt;&gt; map, Class&lt;?&gt; key,</span></span><br><span class="line"><span class="params">      BeanDefinitionNameOrder value)</span> &#123;</span><br><span class="line">    List&lt;BeanDefinitionNameOrder&gt; beanDefinitionNameOrderList = map.get(key);</span><br><span class="line">    <span class="keyword">if</span> (CollUtil.isEmpty(beanDefinitionNameOrderList)) &#123;</span><br><span class="line">      map.put(key, Lists.newArrayList(value));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      beanDefinitionNameOrderList.add(value);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 根据bean定义的名称列表返回 &#123;<span class="doctag">@link</span> BeanDefinitionNameOrder&#125;列表</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> beanDefinitionRegistry &#123;<span class="doctag">@link</span> BeanDefinitionRegistry&#125;</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> bean定义列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> List&lt;BeanDefinitionNameOrder&gt; <span class="title function_">extractBeanDefinitionOrder</span><span class="params">(</span></span><br><span class="line"><span class="params">      BeanDefinitionRegistry beanDefinitionRegistry)</span> &#123;</span><br><span class="line"></span><br><span class="line">    String[] beanDefinitionNames = beanDefinitionRegistry.getBeanDefinitionNames();</span><br><span class="line">    List&lt;BeanDefinitionNameOrder&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (String beanDefinitionName : beanDefinitionNames) &#123;</span><br><span class="line">      <span class="type">BeanDefinition</span> <span class="variable">beanDefinition</span> <span class="operator">=</span> beanDefinitionRegistry.getBeanDefinition(beanDefinitionName);</span><br><span class="line">      <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> beanDefinition.getBeanClassName();</span><br><span class="line">      Class&lt;?&gt; aClass = findClassForName(className);</span><br><span class="line">      <span class="keyword">if</span> (Objects.nonNull(aClass)) &#123;</span><br><span class="line">        <span class="keyword">for</span> (Class&lt;?&gt; matchClass : orderClassList) &#123;</span><br><span class="line">          <span class="keyword">if</span> (matchClass.isAssignableFrom(aClass)) &#123;</span><br><span class="line">            <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> aClass.getAnnotation(Order.class);</span><br><span class="line">            <span class="type">int</span> <span class="variable">orderNumber</span> <span class="operator">=</span> Objects.isNull(order) ? Integer.MAX_VALUE : order.value();</span><br><span class="line"></span><br><span class="line">            <span class="type">BeanDefinitionNameOrder</span> <span class="variable">beanDefinitionNameOrder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanDefinitionNameOrder</span>();</span><br><span class="line">            beanDefinitionNameOrder.setBeanDefinition(beanDefinition);</span><br><span class="line">            beanDefinitionNameOrder.setBeanDefinitionName(beanDefinitionName);</span><br><span class="line">            beanDefinitionNameOrder.setOrder(orderNumber);</span><br><span class="line">            beanDefinitionNameOrder.setClassType(matchClass);</span><br><span class="line"></span><br><span class="line">            result.add(beanDefinitionNameOrder);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Class&lt;?&gt; findClassForName(String className) &#123;</span><br><span class="line">    <span class="keyword">if</span> (StrUtil.isEmpty(className)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> Class.forName(className);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">      log.error(<span class="string">&quot;找不到该class文件:&#123;&#125;&quot;</span>, className);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postProcessBeanFactory</span><span class="params">(<span class="meta">@NonNull</span></span></span><br><span class="line"><span class="params">      ConfigurableListableBeanFactory configurableListableBeanFactory)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">    <span class="comment">// nothing</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 用于给 &#123;<span class="doctag">@link</span> org.springframework.beans.factory.support.DefaultListableBeanFactory&#125;中的beanDefinitionNames进行排序的数据结构</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">BeanDefinitionNameOrder</span> <span class="keyword">implements</span> <span class="title class_">Comparable</span>&lt;BeanDefinitionNameOrder&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer order;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BeanDefinition beanDefinition;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String beanDefinitionName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Class&lt;?&gt; classType;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; getClassType() &#123;</span><br><span class="line">      <span class="keyword">return</span> classType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setClassType</span><span class="params">(Class&lt;?&gt; classType)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.classType = classType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getOrder</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> order;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOrder</span><span class="params">(Integer order)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.order = order;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BeanDefinition <span class="title function_">getBeanDefinition</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> beanDefinition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBeanDefinition</span><span class="params">(BeanDefinition beanDefinition)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.beanDefinition = beanDefinition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBeanDefinitionName</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> beanDefinitionName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBeanDefinitionName</span><span class="params">(String beanDefinitionName)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.beanDefinitionName = beanDefinitionName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(BeanDefinitionNameOrder o)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.order - o.getOrder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object o)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">this</span> == o) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (o == <span class="literal">null</span> || getClass() != o.getClass()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="type">BeanDefinitionNameOrder</span> <span class="variable">that</span> <span class="operator">=</span> (BeanDefinitionNameOrder) o;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">EqualsBuilder</span>().append(order, that.order)</span><br><span class="line">          .append(beanDefinition, that.beanDefinition)</span><br><span class="line">          .append(beanDefinitionName, that.beanDefinitionName).append(classType, that.classType)</span><br><span class="line">          .isEquals();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HashCodeBuilder</span>(<span class="number">17</span>, <span class="number">37</span>).append(order).append(beanDefinition)</span><br><span class="line">          .append(beanDefinitionName)</span><br><span class="line">          .append(classType).toHashCode();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>此时在两个实现类中分别加上@Order注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.b.a.c;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Order(1)</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DefaultUserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.b.a.c;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Order(2)</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AllUserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Tom-all&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，无论是idea编译运行，还是jar包运行的方式，我们通过SpringFactory.getBean(UserService.class)获取到的就是 DefaultUserServiceImpl 对象。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring异步执行时同步上下文信息</title>
      <link href="/2022/01/05/Spring%E5%BC%82%E6%AD%A5%E6%89%A7%E8%A1%8C%E6%97%B6%E5%90%8C%E6%AD%A5%E4%B8%8A%E4%B8%8B%E6%96%87%E4%BF%A1%E6%81%AF/"/>
      <url>/2022/01/05/Spring%E5%BC%82%E6%AD%A5%E6%89%A7%E8%A1%8C%E6%97%B6%E5%90%8C%E6%AD%A5%E4%B8%8A%E4%B8%8B%E6%96%87%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>Spring中启用异步</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AsyncApplication</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    SpringApplication.run(AsyncApplication.class, args);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="meta">@Async</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">asyncUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">// 同步用户信息</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadPoolConfig</span> &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="meta">@Bean(&quot;asyncExecutor&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> Executor <span class="title function_">taskExecutor</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">ThreadPoolTaskExecutor</span> <span class="variable">executor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolTaskExecutor</span>();</span><br><span class="line">    <span class="comment">// 核心线程数（默认线程数）</span></span><br><span class="line">    executor.setCorePoolSize(<span class="number">10</span>);</span><br><span class="line">    <span class="comment">// 最大线程数</span></span><br><span class="line">    executor.setMaxPoolSize(<span class="number">20</span>);</span><br><span class="line">    <span class="comment">// 缓冲队列数</span></span><br><span class="line">    executor.setQueueCapacity(<span class="number">200</span>);</span><br><span class="line">    <span class="comment">// 允许线程空闲时间（单位：默认为秒）</span></span><br><span class="line">    executor.setKeepAliveSeconds(<span class="number">60</span>);</span><br><span class="line">    <span class="comment">// 线程池名前缀</span></span><br><span class="line">    executor.setThreadNamePrefix(<span class="string">&quot;taskExecutor-&quot;</span>);</span><br><span class="line">    <span class="comment">// 线程池对拒绝任务的处理策略</span></span><br><span class="line">    executor.setRejectedExecutionHandler(<span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.CallerRunsPolicy());</span><br><span class="line">    <span class="keyword">return</span> executor;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>异步请求图例</p><img src="/2022/01/05/Spring%E5%BC%82%E6%AD%A5%E6%89%A7%E8%A1%8C%E6%97%B6%E5%90%8C%E6%AD%A5%E4%B8%8A%E4%B8%8B%E6%96%87%E4%BF%A1%E6%81%AF/servlet.png" class="" title="servlet请求"><p>同步当前线程信息到异步线程中</p><p>实现TaskDecorator</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContextDecorator</span> <span class="keyword">implements</span> <span class="title class_">TaskDecorator</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> Runnable <span class="title function_">decorate</span><span class="params">(Runnable runnable)</span> &#123;</span><br><span class="line">    <span class="type">RequestAttributes</span> <span class="variable">context</span> <span class="operator">=</span> RequestContextHolder.currentRequestAttributes();</span><br><span class="line">    <span class="keyword">return</span> () -&gt; &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        RequestContextHolder.setRequestAttributes(context);</span><br><span class="line">        runnable.run();</span><br><span class="line">      &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        RequestContextHolder.resetRequestAttributes();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadPoolConfig</span> &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="meta">@Bean(&quot;asyncExecutor&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> Executor <span class="title function_">taskExecutor</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">ThreadPoolTaskExecutor</span> <span class="variable">executor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolTaskExecutor</span>();</span><br><span class="line">    <span class="comment">// 核心线程数（默认线程数）</span></span><br><span class="line">    executor.setCorePoolSize(<span class="number">10</span>);</span><br><span class="line">    <span class="comment">// 最大线程数</span></span><br><span class="line">    executor.setMaxPoolSize(<span class="number">20</span>);</span><br><span class="line">    <span class="comment">// 缓冲队列数</span></span><br><span class="line">    executor.setQueueCapacity(<span class="number">200</span>);</span><br><span class="line">    <span class="comment">// 允许线程空闲时间（单位：默认为秒）</span></span><br><span class="line">    executor.setKeepAliveSeconds(<span class="number">60</span>);</span><br><span class="line">    <span class="comment">// 线程池名前缀</span></span><br><span class="line">    executor.setThreadNamePrefix(<span class="string">&quot;taskExecutor-&quot;</span>);</span><br><span class="line">    <span class="comment">// 线程池对拒绝任务的处理策略</span></span><br><span class="line">    executor.setRejectedExecutionHandler(<span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.CallerRunsPolicy());</span><br><span class="line">    <span class="comment">// 增加 TaskDecorator 属性的配置</span></span><br><span class="line">    executor.setTaskDecorator(<span class="keyword">new</span> <span class="title class_">ContextDecorator</span>());</span><br><span class="line">    <span class="keyword">return</span> executor;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样异步线程就可以继承同步线程的上下文信息</p>]]></content>
      
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10设置端口转发</title>
      <link href="/2022/01/05/win10%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
      <url>/2022/01/05/win10%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="Win10设置端口转发"><a href="#Win10设置端口转发" class="headerlink" title="Win10设置端口转发"></a>Win10设置端口转发</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>        在Win10 wsl系统（ip: 192.168.230.20）中启动了一个服务A，暴露出一个端口：3000，我在本机（ip：172.16.20.166）上访问，即：<a href="http://192.168.230.20:3000/">http://192.168.230.20:3000</a> 没有问题，如果局域网中的其它电脑想要访问服务A，是访问不到的。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>        如果局域网中的其它电脑需要访问本机wsl中启动的服务，则需要设置Win10的端口转发，将访问本机的端口转发到本机内部的wsl系统中</p><ol><li><p>利用Nginx做端口转发</p></li><li><p>利用Win10配置端口转发</p></li></ol><h6 id="Win10配置端口转发"><a href="#Win10配置端口转发" class="headerlink" title="Win10配置端口转发"></a>Win10配置端口转发</h6><p>管理员运行</p><ol><li><p>配置端口转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># win10监听端口3000，转发到wsl（192.168.23.20）上的端口3000</span></span><br><span class="line">netsh interface portproxy add v4tov4 listenport=3000 connectport=3000 connectaddress=192.168.230.20</span><br></pre></td></tr></table></figure></li><li><p>配置防火墙规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 放行端口3000</span></span><br><span class="line">New-NetFirewallRule -DisplayName <span class="string">&quot;Allow Inbound TCP Port 3000&quot;</span> -Direction Inbound -Action Allow -Protocol TCP -LocalPort 3000</span><br></pre></td></tr></table></figure></li></ol><h6 id="命令参考"><a href="#命令参考" class="headerlink" title="命令参考"></a>命令参考</h6><ol><li><p>查看转发规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy show v4tov4</span><br></pre></td></tr></table></figure></li><li><p>删除端口转发规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy delete v4tov4 listenport=3000</span><br></pre></td></tr></table></figure></li><li><p>重置端口转发规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy reset</span><br></pre></td></tr></table></figure></li><li><p>删除防火墙规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Remove-NetFirewallRule -DisplayName <span class="string">&quot;Allow Inbound TCP Port 3000&quot;</span></span><br></pre></td></tr></table></figure></li></ol><p>博客参考</p><p>        <a href="https://logi.im/script/achieving-access-to-files-and-resources-on-the-network-between-win10-and-wsl2.html#:~:text=Win10%20%E6%89%80%E5%9C%A8%E5%B1%80%E5%9F%9F%E7%BD%91%E8%AE%BE%E5%A4%87%E8%AE%BF%E9%97%AE%20WSL2%20%E9%A6%96%E5%85%88%E9%9C%80%E8%A6%81%E7%A1%AE%E4%BF%9D%20Windows%20%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%20WSL2%EF%BC%8C%E6%8E%A5%E7%9D%80%E5%9C%A8%20Windows,%E9%98%B2%E7%81%AB%E5%A2%99%E5%85%A5%E7%AB%99%20%E8%A7%84%E5%88%99%EF%BC%8C%E5%B0%86%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91%E5%88%B0%20WSL2%E3%80%82%20%E4%BB%A5%E4%B8%8B%E4%B8%BA%20Powershell%20%E5%91%BD%E4%BB%A4%EF%BC%8C%E9%9C%80%20%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%20%E6%89%A7%E8%A1%8C%E3%80%82">Win10 与 WSL2 间的网络和文件互访 - LOGI</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Win </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux交互式脚本</title>
      <link href="/2022/01/05/linux%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%84%9A%E6%9C%AC/"/>
      <url>/2022/01/05/linux%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h3 id="安装expect"><a href="#安装expect" class="headerlink" title="安装expect"></a>安装expect</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># debian系</span></span><br><span class="line">sudo apt install expect</span><br></pre></td></tr></table></figure><h3 id="Expect中常用的命令"><a href="#Expect中常用的命令" class="headerlink" title="Expect中常用的命令"></a>Expect中常用的命令</h3><ol><li><p>spawn</p><p>启动新的进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spawn ssh root@192.168.5.23</span><br></pre></td></tr></table></figure></li><li><p>expect</p><p>从进程接收字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spawn ssh root@192.168.5.23</span><br><span class="line">expect <span class="string">&quot;*password:&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 结束当前交互进程</span></span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure></li><li><p>send</p><p>向进程发送字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spawn ssh root@192.168.5.23</span><br><span class="line">expect <span class="string">&quot;*password:&quot;</span></span><br><span class="line"><span class="comment"># 添加回车符，执行当前输入</span></span><br><span class="line">send <span class="string">&quot;root\r&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>interact</p><p>结束自动执行，当前进程与用户交互</p></li></ol><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p>前端&#x2F;后端 项目本地打包部署到linux</p><h4 id="脚本实现"><a href="#脚本实现" class="headerlink" title="脚本实现"></a>脚本实现</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> user <span class="string">&quot;root&quot;</span></span><br><span class="line"><span class="built_in">set</span> pass <span class="string">&quot;root&quot;</span></span><br><span class="line"><span class="built_in">set</span> ip <span class="string">&quot;192.168.5.23&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">spawn ssh <span class="variable">$user</span>@<span class="variable">$ip</span></span><br><span class="line">expect <span class="string">&quot;*password:&quot;</span></span><br><span class="line">send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span></span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;cd /opt/stress-test/cloud/aims-stress-test/bin\r&quot;</span> &#125;</span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;sh shutdown.sh\r&quot;</span> &#125;</span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;cd /opt/stress-test/cloud\r&quot;</span>&#125;</span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;rm -rf aims-stress-test\r&quot;</span>&#125;</span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;rm -f aims-stress-test-external-linux-1.0.10-SNAPSHOT.tar.gz\r&quot;</span>&#125;</span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;exit\r&quot;</span>&#125;</span><br><span class="line">expect eof</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy</span></span><br><span class="line">spawn scp /mnt/c/Users/Administrator/Desktop/tmp/aims-stress-test-external-linux-1.0.10-SNAPSHOT.tar.gz <span class="variable">$user</span>@<span class="variable">$ip</span>:/opt/stress-test/cloud/</span><br><span class="line">expect <span class="string">&quot;*password:&quot;</span></span><br><span class="line">send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span></span><br><span class="line">expect eof</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行服务</span></span><br><span class="line">spawn ssh <span class="variable">$user</span>@<span class="variable">$ip</span></span><br><span class="line">expect <span class="string">&quot;*password:&quot;</span></span><br><span class="line">send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span></span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;cd /opt/stress-test/cloud\r&quot;</span> &#125;</span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;tar -xf aims-stress-test-external-linux-1.0.10-SNAPSHOT.tar.gz\r&quot;</span> &#125;</span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;cd /opt/stress-test/cloud/aims-stress-test/bin\r&quot;</span> &#125;</span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;sh startup.sh\r&quot;</span> &#125;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oracle常用命令</title>
      <link href="/2022/01/05/oracle%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/01/05/oracle%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h3 id="查询用户"><a href="#查询用户" class="headerlink" title="查询用户"></a>查询用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from dba_users;</span><br></pre></td></tr></table></figure><h3 id="查询表空间"><a href="#查询表空间" class="headerlink" title="查询表空间"></a>查询表空间</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from Dba_Tablespaces;</span><br></pre></td></tr></table></figure><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop user gmzc_aim cascade ;</span><br></pre></td></tr></table></figure><h3 id="查询文件夹"><a href="#查询文件夹" class="headerlink" title="查询文件夹"></a>查询文件夹</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from SYS.ALL_DIRECTORIES;</span><br></pre></td></tr></table></figure><h3 id="创建表空间"><a href="#创建表空间" class="headerlink" title="创建表空间"></a>创建表空间</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create tablespace GMZC_AIM datafile &#x27;/home/oracle/app/oracle/oradata/orcl55/gmzc_aim.dbf&#x27; size 3G autoextend on next 1024M maxsize 15G extent management local;</span><br></pre></td></tr></table></figure><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create user gmzc_aim identified by gmzc_aim default tablespace GMZC_AIM;</span><br><span class="line"></span><br><span class="line">grant dba to gmzc_aim;</span><br><span class="line"></span><br><span class="line">grant connect,resource to gmzc_aim;</span><br><span class="line"></span><br><span class="line">grant select any table to gmzc_aim;</span><br><span class="line"></span><br><span class="line">grant delete any table to gmzc_aim;</span><br><span class="line"></span><br><span class="line">grant update any table to gmzc_aim;</span><br><span class="line"></span><br><span class="line">grant insert any table to gmzc_aim;</span><br></pre></td></tr></table></figure><h3 id="断掉用户的数据库连接"><a href="#断掉用户的数据库连接" class="headerlink" title="断掉用户的数据库连接"></a>断掉用户的数据库连接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select username,sid,serial#,paddr from v$session where username=&#x27;GMZC_AIM&#x27;;</span><br><span class="line">alter system kill session &#x27;130,9&#x27;;</span><br></pre></td></tr></table></figure><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">impdp gmzc_aim/gmzc_aim@orcl55 DIRECTORY=DATA_PUMP_DIR DUMPFILE=gmzc_aim_2021_12_16.dmp SCHEMAS=GMZC_AIM remap_tablespace=SIRM2:GMZC_AIM</span><br></pre></td></tr></table></figure><h3 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">expdp 用户名/密码@数据库实例名 directory=导出目录 dumpfile=导出的文件名.dmp logfile=导出的日志名.log</span><br><span class="line">--例：expdp GISDATA/GISDATA@LOCALHOST/orcl directory=dmp dumpfile=GISDATA20200921.dmp logfile=GISDATA20200921.log </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos笔记</title>
      <link href="/2022/01/05/centos%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/01/05/centos%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="centos设置固定ip"><a href="#centos设置固定ip" class="headerlink" title="centos设置固定ip"></a>centos设置固定ip</h3><span id="more"></span><p>配置文件一般在 &#x2F;etc&#x2F;sysconfig&#x2F; 下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=eth0</span><br><span class="line">UUID=472c3283-9c65-4d3b-a97d-6c69f9fc0561</span><br><span class="line">DEVICE=eth0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=172.16.20.16</span><br><span class="line">GATEWAY=172.16.20.1</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">DNS1=172.16.20.1</span><br><span class="line">DNS2=114.114.114.114</span><br></pre></td></tr></table></figure><h3 id="查看防火墙某个端口是否开放"><a href="#查看防火墙某个端口是否开放" class="headerlink" title="查看防火墙某个端口是否开放"></a>查看防火墙某个端口是否开放</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --query-port=3306/tcp</span><br></pre></td></tr></table></figure><h3 id="开放防火墙端口3306"><a href="#开放防火墙端口3306" class="headerlink" title="开放防火墙端口3306"></a>开放防火墙端口3306</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br></pre></td></tr></table></figure><p>注意：开放端口后要重启防火墙生效</p><h3 id="重启防火墙"><a href="#重启防火墙" class="headerlink" title="重启防火墙"></a>重启防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><h3 id="关闭防火墙端口"><a href="#关闭防火墙端口" class="headerlink" title="关闭防火墙端口"></a>关闭防火墙端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --remove-port=3306/tcp --permanent</span><br></pre></td></tr></table></figure><h3 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h3 id="打开防火墙"><a href="#打开防火墙" class="headerlink" title="打开防火墙"></a>打开防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><h3 id="开放一段端口"><a href="#开放一段端口" class="headerlink" title="开放一段端口"></a>开放一段端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=40000-45000/tcp --permanent</span><br></pre></td></tr></table></figure><h3 id="查看开放的端口列表"><a href="#查看开放的端口列表" class="headerlink" title="查看开放的端口列表"></a>查看开放的端口列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure><h3 id="查看被监听-Listen-的端口"><a href="#查看被监听-Listen-的端口" class="headerlink" title="查看被监听(Listen)的端口"></a>查看被监听(Listen)的端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp</span><br></pre></td></tr></table></figure><h3 id="检查端口被哪个进程占用"><a href="#检查端口被哪个进程占用" class="headerlink" title="检查端口被哪个进程占用"></a>检查端口被哪个进程占用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnp|grep 3306</span><br></pre></td></tr></table></figure><h3 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h3><h4 id="nginx-启动端口限制问题"><a href="#nginx-启动端口限制问题" class="headerlink" title="nginx 启动端口限制问题"></a>nginx 启动端口限制问题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">semanage port -a -t http_port_t -p tcp 88</span><br><span class="line"></span><br><span class="line">semanage port -l | grep 88</span><br></pre></td></tr></table></figure><h4 id="nginx出现错误-Permission-denied-while-connecting-to-upstream的问题"><a href="#nginx出现错误-Permission-denied-while-connecting-to-upstream的问题" class="headerlink" title="nginx出现错误(Permission denied) while connecting to upstream的问题"></a>nginx出现错误(Permission denied) while connecting to upstream的问题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsebool -P httpd_can_network_connect 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx转发问题</title>
      <link href="/2021/08/28/Nginx%E8%BD%AC%E5%8F%91%E9%97%AE%E9%A2%98/"/>
      <url>/2021/08/28/Nginx%E8%BD%AC%E5%8F%91%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h3 id="Nginx转发接口异常，随机出现404-x2F-200"><a href="#Nginx转发接口异常，随机出现404-x2F-200" class="headerlink" title="Nginx转发接口异常，随机出现404&#x2F;200"></a>Nginx转发接口异常，随机出现404&#x2F;200</h3><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>前端nginx部署，后端单体Spring Boot服务</p><p>重新部署后，当访问页面时，新添加的模块里的接口有时出现404，有时正常返回200。</p><h4 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h4><p>之前遇到过一个差不多的问题，k8s部署应用时，应用存在多实例的情况，而其中一个实例是比较久的代码打包的，访问接口时就出现有时报错有时正常的情况</p><pre class="mermaid">graph TB    A[请求] --> B{"Nginx"}    B -->C["应用实例A"]    B -->D["应用实例B"]</pre><blockquote><p>新添加的接口只存在应用实例B中，当nginx请求转发到应用实例B中，接口正常返回，当nginx请求转发到应用实例A中，接口表现异常</p></blockquote><p>由此，我想到应该是Nginx转发出现了问题。</p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>先查看日志</p><ol><li><p>nginx访问日志出现了502 552的情况</p></li><li><p>nginx错误日志</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connect() failed (111: Connection refused) while connecting to upstream</span><br></pre></td></tr></table></figure></li></ol><p>应用是单体应用部署，不会是上次遇到的情况。</p><p>搜索了一堆东西……</p><p><a href="https://blog.csdn.net/qq_41672878/article/details/108162622">nginx 交替出现404 和200的问题</a></p><p>查看nginx进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure><p>果然存在多个master进程，保留一个就好了。</p><pre class="mermaid">graph TB    A[请求] --> B{"Nginx服务器"}    B -->C["Nginx Master A"]    B -->D["Nginx Master B"]    C -->E["应用实例"]    D -->E</pre><blockquote><p>当接口通过master A转发时，找不到匹配的url，表现在页面就是404</p></blockquote><blockquote><p>当接口通过master B转发时，正确匹配到后端url，表现就是200</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux使用小结</title>
      <link href="/2021/08/15/Linux%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/"/>
      <url>/2021/08/15/Linux%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>整理一些Linux(<code>Debian</code>系)软件和问题</p><span id="more"></span><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><blockquote><p><a href="http://get.daocloud.io/#install-docker">http://get.daocloud.io/#install-docker</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><p>docker compose</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aptitude install docker-compose</span><br></pre></td></tr></table></figure><p>构建mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Mysql根目录</span></span><br><span class="line">mkdir -p ~/Programs/Mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">数据目录</span></span><br><span class="line">mkdir -p ~/Programs/Mysql/data</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置目录</span></span><br><span class="line">mkdir -p ~/Programs/Mysql/conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">初始化脚本目录</span></span><br><span class="line">mkdir -p ~/Porgrams/Mysql/init</span><br><span class="line"></span><br><span class="line">cd ~/Programs/Mysql</span><br></pre></td></tr></table></figure><p><a href="Linux%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/mysql/docker-compose">docker-compose.yaml</a></p><h3 id="命令行翻译"><a href="#命令行翻译" class="headerlink" title="命令行翻译"></a>命令行翻译</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo aptitude install npm</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置淘宝镜像</span></span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line">npm install terminal-translate -g</span><br></pre></td></tr></table></figure><h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3><p>Flameshot</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install flameshot</span><br></pre></td></tr></table></figure><h3 id="启动器"><a href="#启动器" class="headerlink" title="启动器"></a>启动器</h3><p>Albert</p><p><a href="https://albertlauncher.github.io/">官网</a></p><h3 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h3><p>Rime</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install fcitx5-rime</span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="将当前用户加入docker组"><a href="#将当前用户加入docker组" class="headerlink" title="将当前用户加入docker组"></a>将当前用户加入docker组</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR: Couldn’t connect to Docker daemon at http+docker://localunixsocket - is it running?</span><br><span class="line">If it’s at a non-standard location, specify the URL with the DOCKER_HOST environment variable.</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo gpasswd -a $&#123;USER&#125; docker</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将普通用户username加入到docker组</span></span><br><span class="line">sudo gpasswd -a username docker</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">更新docker组</span></span><br><span class="line">newgrp docker</span><br></pre></td></tr></table></figure><h3 id="grub启动界面乱码"><a href="#grub启动界面乱码" class="headerlink" title="grub启动界面乱码"></a>grub启动界面乱码</h3><ul><li>查看grub下的字体</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ls /boot/grub/fonts/</span><br></pre></td></tr></table></figure><ul><li>修改unicode字体</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/default/grub.d/60_mint-theme.cfg</span><br></pre></td></tr></table></figure><img src="/2021/08/15/Linux%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/grub-font.png" class="" title="字体配置">]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
